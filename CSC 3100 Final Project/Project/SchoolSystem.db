-- Create the database
CREATE DATABASE IF NOT EXISTS SchoolSystem;
USE SchoolSystem;

-- tblUsers
CREATE TABLE tblUsers (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    Email VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,
    UserType ENUM('student', 'instructor', 'admin') DEFAULT 'student',
    CreationDateTime DATETIME DEFAULT CURRENT_TIMESTAMP,
    LastLoginDateTime DATETIME
);

-- tblCourses
CREATE TABLE tblCourses (
    CourseID INT AUTO_INCREMENT PRIMARY KEY,
    CourseName VARCHAR(255) NOT NULL,
    CourseNumber VARCHAR(100) NOT NULL,
    CourseSection VARCHAR(50),
    CourseTerm VARCHAR(50),
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL
);

-- tblPhone
CREATE TABLE tblPhone (
    PhoneID INT AUTO_INCREMENT PRIMARY KEY,
    NationCode VARCHAR(10),
    AreaCode VARCHAR(10),
    PhoneNumber VARCHAR(20),
    Status VARCHAR(50),
    UserEmail VARCHAR(255),
    FOREIGN KEY (UserEmail) REFERENCES tblUsers(Email)
);

-- tblSocials
CREATE TABLE tblSocials (
    SocialID INT AUTO_INCREMENT PRIMARY KEY,
    SocialType VARCHAR(50),
    Username VARCHAR(100),
    UserEmail VARCHAR(255),
    FOREIGN KEY (UserEmail) REFERENCES tblUsers(Email)
);

-- tblEnrollments
CREATE TABLE tblEnrollments (
    EnrollmentID INT AUTO_INCREMENT PRIMARY KEY,
    CourseID INT,
    UserID INT,
    FOREIGN KEY (CourseID) REFERENCES tblCourses(CourseID),
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID)
);

-- tblAssessments
CREATE TABLE tblAssessments (
    AssessmentID INT AUTO_INCREMENT PRIMARY KEY,
    CourseID INT,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Status VARCHAR(50),
    Type VARCHAR(50),
    FOREIGN KEY (CourseID) REFERENCES tblCourses(CourseID)
);

-- tblAssessmentQuestions
CREATE TABLE tblAssessmentQuestions (
    QuestionID INT AUTO_INCREMENT PRIMARY KEY,
    QuestionType VARCHAR(50),
    Options TEXT,
    QuestionNarrative TEXT,
    HelperText TEXT
);

-- tblAssessmentResponses
CREATE TABLE tblAssessmentResponses (
    ResponseID INT AUTO_INCREMENT PRIMARY KEY,
    AssessmentID INT,
    UserID INT,
    QuestionID INT,
    Response TEXT,
    TargetUserID INT,
    Public BOOLEAN,
    FOREIGN KEY (AssessmentID) REFERENCES tblAssessments(AssessmentID),
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID),
    FOREIGN KEY (QuestionID) REFERENCES tblAssessmentQuestions(QuestionID),
    FOREIGN KEY (TargetUserID) REFERENCES tblUsers(UserID)
);

-- tblCourseGroups
CREATE TABLE tblCourseGroups (
    GroupID INT AUTO_INCREMENT PRIMARY KEY,
    GroupName VARCHAR(255) NOT NULL,
    CourseID INT,
    FOREIGN KEY (CourseID) REFERENCES tblCourses(CourseID)
);

-- tblGroupMembers
CREATE TABLE tblGroupMembers (
    GroupMemberID INT AUTO_INCREMENT PRIMARY KEY,
    GroupID INT,
    UserID INT,
    FOREIGN KEY (GroupID) REFERENCES tblCourseGroups(GroupID),
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID)
);

-- tblSessions
CREATE TABLE tblSessions (
    SessionID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    StartDateTime DATETIME DEFAULT CURRENT_TIMESTAMP,
    LastUsedDateTime DATETIME,
    Status VARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES tblUsers(UserID)
);

-- tblLogs
CREATE TABLE tblLogs (
    LogID INT AUTO_INCREMENT PRIMARY KEY,
    Description TEXT NOT NULL,
    Type ENUM('Error', 'Info', 'Warning', 'Debug'),
    DateTime DATETIME DEFAULT CURRENT_TIMESTAMP
);